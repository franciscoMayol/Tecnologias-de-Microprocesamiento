
Problema A (Plotter) - Version Final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000d80  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000d80  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000daf  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000dbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002962  00000000  00000000  00000ead  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007b5  00000000  00000000  0000380f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e81  00000000  00000000  00003fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001dc  00000000  00000000  00004e48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000212  00000000  00000000  00005024  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001522  00000000  00000000  00005236  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  00006758  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000cfe  00000cfe  00000d72  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006838  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.iniciarPuertos 00000006  00000cf8  00000cf8  00000d6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.UART_init 00000016  00000c36  00000c36  00000caa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.UART_sendChar 0000000e  00000cc0  00000cc0  00000d34  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.UART_sendString 0000002c  00000bec  00000bec  00000c60  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.UART_receiveChar 0000000e  00000cce  00000cce  00000d42  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .progmemx.data 00000134  00000080  00000080  000000f4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 20 .text.mostrarMenu 00000048  00000ba4  00000ba4  00000c18  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.delay_ms_parametro 0000001e  00000c18  00000c18  00000c8c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.activarSolenoide 0000000e  00000cdc  00000cdc  00000d50  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.desactivarSolenoide 0000000e  00000cea  00000cea  00000d5e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.moverIzquierda 00000012  00000c78  00000c78  00000cec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.moverDerecha 00000012  00000c8a  00000c8a  00000cfe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.moverAbajo 00000012  00000c9c  00000c9c  00000d10  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.moverArriba 00000012  00000cae  00000cae  00000d22  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.moverArribaIzquierda 00000050  000007e4  000007e4  00000858  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.moverArribaDerecha 00000050  00000834  00000834  000008a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.moverAbajoIzquierda 00000050  00000884  00000884  000008f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.moverAbajoDerecha 00000050  000008d4  000008d4  00000948  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.moverArribaIzquierda30 00000050  00000924  00000924  00000998  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.moverArribaDerecha30 00000050  00000974  00000974  000009e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.moverAbajoIzquierda30 00000050  000009c4  000009c4  00000a38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.moverAbajoDerecha30 00000050  00000a14  00000a14  00000a88  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.moverArribaIzquierda60 00000050  00000a64  00000a64  00000ad8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.moverArribaDerecha60 00000050  00000ab4  00000ab4  00000b28  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.moverAbajoIzquierda60 00000050  00000b04  00000b04  00000b78  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.moverAbajoDerecha60 00000050  00000b54  00000b54  00000bc8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.seleccionarFigura 00000630  000001b4  000001b4  00000228  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.main    00000016  00000c4c  00000c4c  00000cc0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.__dummy_fini 00000002  00000d06  00000d06  00000d7a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.__dummy_funcs_on_exit 00000002  00000d08  00000d08  00000d7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.__dummy_simulator_exit 00000002  00000d0a  00000d0a  00000d7e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.exit    00000016  00000c62  00000c62  00000cd6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text._Exit   00000004  00000d02  00000d02  00000d76  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
   8:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
   c:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  10:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  14:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  18:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  1c:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  20:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  24:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  28:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  2c:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  30:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  34:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  38:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  3c:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  40:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  44:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  48:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  4c:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  50:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  54:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  58:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  5c:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  60:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>
  64:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 26 06 	call	0xc4c	; 0xc4c <main>
  78:	0c 94 31 06 	jmp	0xc62	; 0xc62 <exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

00000cfe <__bad_interrupt>:
 cfe:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.iniciarPuertos:

00000cf8 <iniciarPuertos>:
}

//Puertos
void iniciarPuertos(void){
	
	DDRD = 0b11111111;
 cf8:	8f ef       	ldi	r24, 0xFF	; 255
 cfa:	8a b9       	out	0x0a, r24	; 10
 cfc:	08 95       	ret

Disassembly of section .text.UART_init:

00000c36 <UART_init>:
	
}

// Inicializar UART
void UART_init(unsigned int ubrr){
	UBRR0H = (unsigned char)(ubrr >> 8);
 c36:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
 c3a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1 << RXEN0) | (1 << TXEN0); // Habilitar recepción y transmisión
 c3e:	88 e1       	ldi	r24, 0x18	; 24
 c40:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // Configurar 8 bits de datos
 c44:	86 e0       	ldi	r24, 0x06	; 6
 c46:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 c4a:	08 95       	ret

Disassembly of section .text.UART_sendChar:

00000cc0 <UART_sendChar>:
}

// Enviar un carácter por UART
void UART_sendChar(char data){
	while(!(UCSR0A & (1 << UDRE0))); // Esperar a que el registro esté listo
 cc0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 cc4:	95 ff       	sbrs	r25, 5
 cc6:	fc cf       	rjmp	.-8      	; 0xcc0 <UART_sendChar>
	UDR0 = data; // Enviar el dato
 cc8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 ccc:	08 95       	ret

Disassembly of section .text.UART_sendString:

00000bec <UART_sendString>:
}

// Enviar una cadena de caracteres por UART
void UART_sendString(const char *str){
 bec:	cf 92       	push	r12
 bee:	df 92       	push	r13
 bf0:	ef 92       	push	r14
 bf2:	6b 01       	movw	r12, r22
 bf4:	e8 2e       	mov	r14, r24
	while(*str){
 bf6:	06 c0       	rjmp	.+12     	; 0xc04 <UART_sendString+0x18>
		UART_sendChar(*str++);
 bf8:	9f ef       	ldi	r25, 0xFF	; 255
 bfa:	c9 1a       	sub	r12, r25
 bfc:	d9 0a       	sbc	r13, r25
 bfe:	e9 0a       	sbc	r14, r25
 c00:	0e 94 60 06 	call	0xcc0	; 0xcc0 <UART_sendChar>
	UDR0 = data; // Enviar el dato
}

// Enviar una cadena de caracteres por UART
void UART_sendString(const char *str){
	while(*str){
 c04:	f6 01       	movw	r30, r12
 c06:	84 91       	lpm	r24, Z
 c08:	e7 fc       	sbrc	r14, 7
 c0a:	80 81       	ld	r24, Z
 c0c:	81 11       	cpse	r24, r1
 c0e:	f4 cf       	rjmp	.-24     	; 0xbf8 <UART_sendString+0xc>
		UART_sendChar(*str++);
	}
}
 c10:	ef 90       	pop	r14
 c12:	df 90       	pop	r13
 c14:	cf 90       	pop	r12
 c16:	08 95       	ret

Disassembly of section .text.UART_receiveChar:

00000cce <UART_receiveChar>:

// Recibir un carácter por UART
char UART_receiveChar(void){
	while(!(UCSR0A & (1 << RXC0))); // Esperar a que llegue un dato
 cce:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 cd2:	88 23       	and	r24, r24
 cd4:	e4 f7       	brge	.-8      	; 0xcce <UART_receiveChar>
	return UDR0; // Retornar el dato recibido
 cd6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 cda:	08 95       	ret

Disassembly of section .text.mostrarMenu:

00000ba4 <mostrarMenu>:

// Mostrar el menú
void mostrarMenu(void){
	UART_sendString("\n--- Menu de Figuras ---\n");
 ba4:	60 e8       	ldi	r22, 0x80	; 128
 ba6:	70 e0       	ldi	r23, 0x00	; 0
 ba8:	80 e0       	ldi	r24, 0x00	; 0
 baa:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
	UART_sendString("1. Dibujar Circulo\n");
 bae:	6a e9       	ldi	r22, 0x9A	; 154
 bb0:	70 e0       	ldi	r23, 0x00	; 0
 bb2:	80 e0       	ldi	r24, 0x00	; 0
 bb4:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
	UART_sendString("2. Dibujar Triangulo\n");
 bb8:	6e ea       	ldi	r22, 0xAE	; 174
 bba:	70 e0       	ldi	r23, 0x00	; 0
 bbc:	80 e0       	ldi	r24, 0x00	; 0
 bbe:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
	UART_sendString("3. Dibujar Cruz\n");
 bc2:	64 ec       	ldi	r22, 0xC4	; 196
 bc4:	70 e0       	ldi	r23, 0x00	; 0
 bc6:	80 e0       	ldi	r24, 0x00	; 0
 bc8:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
	UART_sendString("4. Dibujar Perro\n");
 bcc:	65 ed       	ldi	r22, 0xD5	; 213
 bce:	70 e0       	ldi	r23, 0x00	; 0
 bd0:	80 e0       	ldi	r24, 0x00	; 0
 bd2:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
	UART_sendString("5. Dibujar Manzana\n");
 bd6:	67 ee       	ldi	r22, 0xE7	; 231
 bd8:	70 e0       	ldi	r23, 0x00	; 0
 bda:	80 e0       	ldi	r24, 0x00	; 0
 bdc:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
	UART_sendString("Seleccione una opcion (1-5): ");
 be0:	6b ef       	ldi	r22, 0xFB	; 251
 be2:	70 e0       	ldi	r23, 0x00	; 0
 be4:	80 e0       	ldi	r24, 0x00	; 0
 be6:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
 bea:	08 95       	ret

Disassembly of section .text.delay_ms_parametro:

00000c18 <delay_ms_parametro>:
	}
}

//Funcion para delay por parametro
void delay_ms_parametro(unsigned int tiempo_ms) {
	for(unsigned int i = 0; i < tiempo_ms; i++) {
 c18:	20 e0       	ldi	r18, 0x00	; 0
 c1a:	30 e0       	ldi	r19, 0x00	; 0
 c1c:	08 c0       	rjmp	.+16     	; 0xc2e <delay_ms_parametro+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 c1e:	ef e9       	ldi	r30, 0x9F	; 159
 c20:	ff e0       	ldi	r31, 0x0F	; 15
 c22:	31 97       	sbiw	r30, 0x01	; 1
 c24:	f1 f7       	brne	.-4      	; 0xc22 <delay_ms_parametro+0xa>
 c26:	00 c0       	rjmp	.+0      	; 0xc28 <delay_ms_parametro+0x10>
 c28:	00 00       	nop
 c2a:	2f 5f       	subi	r18, 0xFF	; 255
 c2c:	3f 4f       	sbci	r19, 0xFF	; 255
 c2e:	28 17       	cp	r18, r24
 c30:	39 07       	cpc	r19, r25
 c32:	a8 f3       	brcs	.-22     	; 0xc1e <delay_ms_parametro+0x6>
		_delay_ms(1);  // Retraso de 1 ms, iterado tantas veces como sea necesario
	}
}
 c34:	08 95       	ret

Disassembly of section .text.activarSolenoide:

00000cdc <activarSolenoide>:

//Funciones para activar y deasctivar el solenoide
void activarSolenoide(void) {
	PORTD |= (1 << BAJAR_SOLENOIDE);  // Activar solenoide para trazar
 cdc:	8b b1       	in	r24, 0x0b	; 11
 cde:	84 60       	ori	r24, 0x04	; 4
 ce0:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~(1 << SUBIR_SOLENOIDE);
 ce2:	8b b1       	in	r24, 0x0b	; 11
 ce4:	87 7f       	andi	r24, 0xF7	; 247
 ce6:	8b b9       	out	0x0b, r24	; 11
 ce8:	08 95       	ret

Disassembly of section .text.desactivarSolenoide:

00000cea <desactivarSolenoide>:

}

void desactivarSolenoide(void) {
	PORTD |= (1 << SUBIR_SOLENOIDE);
 cea:	8b b1       	in	r24, 0x0b	; 11
 cec:	88 60       	ori	r24, 0x08	; 8
 cee:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~(1 << BAJAR_SOLENOIDE);  // Desactivar solenoide para dejar de trazar
 cf0:	8b b1       	in	r24, 0x0b	; 11
 cf2:	8b 7f       	andi	r24, 0xFB	; 251
 cf4:	8b b9       	out	0x0b, r24	; 11
 cf6:	08 95       	ret

Disassembly of section .text.moverIzquierda:

00000c78 <moverIzquierda>:


//Funciones de movimiento simple del solenoide

void moverIzquierda(unsigned int tiempo_ms) {
	PORTD |= (1 << MOV_IZQ);
 c78:	2b b1       	in	r18, 0x0b	; 11
 c7a:	20 64       	ori	r18, 0x40	; 64
 c7c:	2b b9       	out	0x0b, r18	; 11
	delay_ms_parametro(tiempo_ms);
 c7e:	0e 94 0c 06 	call	0xc18	; 0xc18 <delay_ms_parametro>
	PORTD &= ~(1 << MOV_IZQ);
 c82:	8b b1       	in	r24, 0x0b	; 11
 c84:	8f 7b       	andi	r24, 0xBF	; 191
 c86:	8b b9       	out	0x0b, r24	; 11
 c88:	08 95       	ret

Disassembly of section .text.moverDerecha:

00000c8a <moverDerecha>:
}

void moverDerecha(unsigned int tiempo_ms) {
	PORTD |= (1 << MOV_DER);
 c8a:	2b b1       	in	r18, 0x0b	; 11
 c8c:	20 68       	ori	r18, 0x80	; 128
 c8e:	2b b9       	out	0x0b, r18	; 11
	delay_ms_parametro(tiempo_ms);
 c90:	0e 94 0c 06 	call	0xc18	; 0xc18 <delay_ms_parametro>
	PORTD &= ~(1 << MOV_DER);
 c94:	8b b1       	in	r24, 0x0b	; 11
 c96:	8f 77       	andi	r24, 0x7F	; 127
 c98:	8b b9       	out	0x0b, r24	; 11
 c9a:	08 95       	ret

Disassembly of section .text.moverAbajo:

00000c9c <moverAbajo>:
}

void moverAbajo(unsigned int tiempo_ms) {
	PORTD |= (1 << MOV_ABAJO);
 c9c:	2b b1       	in	r18, 0x0b	; 11
 c9e:	20 61       	ori	r18, 0x10	; 16
 ca0:	2b b9       	out	0x0b, r18	; 11
	delay_ms_parametro(tiempo_ms);
 ca2:	0e 94 0c 06 	call	0xc18	; 0xc18 <delay_ms_parametro>
	PORTD &= ~(1 << MOV_ABAJO);
 ca6:	8b b1       	in	r24, 0x0b	; 11
 ca8:	8f 7e       	andi	r24, 0xEF	; 239
 caa:	8b b9       	out	0x0b, r24	; 11
 cac:	08 95       	ret

Disassembly of section .text.moverArriba:

00000cae <moverArriba>:
}

void moverArriba(unsigned int tiempo_ms) {
	PORTD |= (1 << MOV_ARRIBA);
 cae:	2b b1       	in	r18, 0x0b	; 11
 cb0:	20 62       	ori	r18, 0x20	; 32
 cb2:	2b b9       	out	0x0b, r18	; 11
	delay_ms_parametro(tiempo_ms);
 cb4:	0e 94 0c 06 	call	0xc18	; 0xc18 <delay_ms_parametro>
	PORTD &= ~(1 << MOV_ARRIBA);
 cb8:	8b b1       	in	r24, 0x0b	; 11
 cba:	8f 7d       	andi	r24, 0xDF	; 223
 cbc:	8b b9       	out	0x0b, r24	; 11
 cbe:	08 95       	ret

Disassembly of section .text.moverArribaIzquierda:

000007e4 <moverArribaIzquierda>:
}

//Funciones de movimiento diagonal del solenoide

void moverArribaIzquierda(unsigned int tiempo_ms) {
 7e4:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 7e6:	20 e0       	ldi	r18, 0x00	; 0
 7e8:	30 e0       	ldi	r19, 0x00	; 0
 7ea:	20 c0       	rjmp	.+64     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
		PORTD |= (1 << MOV_IZQ);
 7ec:	9b b1       	in	r25, 0x0b	; 11
 7ee:	90 64       	ori	r25, 0x40	; 64
 7f0:	9b b9       	out	0x0b, r25	; 11
 7f2:	6f ef       	ldi	r22, 0xFF	; 255
 7f4:	8a e6       	ldi	r24, 0x6A	; 106
 7f6:	93 e0       	ldi	r25, 0x03	; 3
 7f8:	61 50       	subi	r22, 0x01	; 1
 7fa:	80 40       	sbci	r24, 0x00	; 0
 7fc:	90 40       	sbci	r25, 0x00	; 0
 7fe:	e1 f7       	brne	.-8      	; 0x7f8 <moverArribaIzquierda+0x14>
 800:	00 c0       	rjmp	.+0      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 802:	00 00       	nop
		_delay_ms(70);
		PORTD &= ~(1 << MOV_IZQ);
 804:	9b b1       	in	r25, 0x0b	; 11
 806:	9f 7b       	andi	r25, 0xBF	; 191
 808:	9b b9       	out	0x0b, r25	; 11
		
		PORTD |= (1 << MOV_ARRIBA);
 80a:	9b b1       	in	r25, 0x0b	; 11
 80c:	90 62       	ori	r25, 0x20	; 32
 80e:	9b b9       	out	0x0b, r25	; 11
 810:	6f ef       	ldi	r22, 0xFF	; 255
 812:	8a e6       	ldi	r24, 0x6A	; 106
 814:	93 e0       	ldi	r25, 0x03	; 3
 816:	61 50       	subi	r22, 0x01	; 1
 818:	80 40       	sbci	r24, 0x00	; 0
 81a:	90 40       	sbci	r25, 0x00	; 0
 81c:	e1 f7       	brne	.-8      	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 81e:	00 c0       	rjmp	.+0      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 820:	00 00       	nop
		_delay_ms(70);
		PORTD &= ~(1 << MOV_ARRIBA);
 822:	9b b1       	in	r25, 0x0b	; 11
 824:	9f 7d       	andi	r25, 0xDF	; 223
 826:	9b b9       	out	0x0b, r25	; 11
}

//Funciones de movimiento diagonal del solenoide

void moverArribaIzquierda(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 828:	2f 5f       	subi	r18, 0xFF	; 255
 82a:	3f 4f       	sbci	r19, 0xFF	; 255
 82c:	24 17       	cp	r18, r20
 82e:	35 07       	cpc	r19, r21
 830:	e8 f2       	brcs	.-70     	; 0x7ec <moverArribaIzquierda+0x8>
		
		PORTD |= (1 << MOV_ARRIBA);
		_delay_ms(70);
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}
 832:	08 95       	ret

Disassembly of section .text.moverArribaDerecha:

00000834 <moverArribaDerecha>:

void moverArribaDerecha(unsigned int tiempo_ms) {
 834:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 836:	20 e0       	ldi	r18, 0x00	; 0
 838:	30 e0       	ldi	r19, 0x00	; 0
 83a:	20 c0       	rjmp	.+64     	; 0x87c <moverArribaDerecha+0x48>
		PORTD |= (1 << MOV_DER);
 83c:	9b b1       	in	r25, 0x0b	; 11
 83e:	90 68       	ori	r25, 0x80	; 128
 840:	9b b9       	out	0x0b, r25	; 11
 842:	6f ef       	ldi	r22, 0xFF	; 255
 844:	8a e6       	ldi	r24, 0x6A	; 106
 846:	93 e0       	ldi	r25, 0x03	; 3
 848:	61 50       	subi	r22, 0x01	; 1
 84a:	80 40       	sbci	r24, 0x00	; 0
 84c:	90 40       	sbci	r25, 0x00	; 0
 84e:	e1 f7       	brne	.-8      	; 0x848 <moverArribaDerecha+0x14>
 850:	00 c0       	rjmp	.+0      	; 0x852 <moverArribaDerecha+0x1e>
 852:	00 00       	nop
		_delay_ms(70);
		PORTD &= ~(1 << MOV_DER);
 854:	9b b1       	in	r25, 0x0b	; 11
 856:	9f 77       	andi	r25, 0x7F	; 127
 858:	9b b9       	out	0x0b, r25	; 11
		
		PORTD |= (1 << MOV_ARRIBA);
 85a:	9b b1       	in	r25, 0x0b	; 11
 85c:	90 62       	ori	r25, 0x20	; 32
 85e:	9b b9       	out	0x0b, r25	; 11
 860:	6f ef       	ldi	r22, 0xFF	; 255
 862:	8a e6       	ldi	r24, 0x6A	; 106
 864:	93 e0       	ldi	r25, 0x03	; 3
 866:	61 50       	subi	r22, 0x01	; 1
 868:	80 40       	sbci	r24, 0x00	; 0
 86a:	90 40       	sbci	r25, 0x00	; 0
 86c:	e1 f7       	brne	.-8      	; 0x866 <moverArribaDerecha+0x32>
 86e:	00 c0       	rjmp	.+0      	; 0x870 <moverArribaDerecha+0x3c>
 870:	00 00       	nop
		_delay_ms(70);
		PORTD &= ~(1 << MOV_ARRIBA);
 872:	9b b1       	in	r25, 0x0b	; 11
 874:	9f 7d       	andi	r25, 0xDF	; 223
 876:	9b b9       	out	0x0b, r25	; 11
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}

void moverArribaDerecha(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 878:	2f 5f       	subi	r18, 0xFF	; 255
 87a:	3f 4f       	sbci	r19, 0xFF	; 255
 87c:	24 17       	cp	r18, r20
 87e:	35 07       	cpc	r19, r21
 880:	e8 f2       	brcs	.-70     	; 0x83c <moverArribaDerecha+0x8>
		
		PORTD |= (1 << MOV_ARRIBA);
		_delay_ms(70);
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}
 882:	08 95       	ret

Disassembly of section .text.moverAbajoIzquierda:

00000884 <moverAbajoIzquierda>:

void moverAbajoIzquierda(unsigned int tiempo_ms) {
 884:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 886:	20 e0       	ldi	r18, 0x00	; 0
 888:	30 e0       	ldi	r19, 0x00	; 0
 88a:	20 c0       	rjmp	.+64     	; 0x8cc <moverAbajoIzquierda+0x48>
		PORTD |= (1 << MOV_IZQ);
 88c:	9b b1       	in	r25, 0x0b	; 11
 88e:	90 64       	ori	r25, 0x40	; 64
 890:	9b b9       	out	0x0b, r25	; 11
 892:	6f ef       	ldi	r22, 0xFF	; 255
 894:	8a e6       	ldi	r24, 0x6A	; 106
 896:	93 e0       	ldi	r25, 0x03	; 3
 898:	61 50       	subi	r22, 0x01	; 1
 89a:	80 40       	sbci	r24, 0x00	; 0
 89c:	90 40       	sbci	r25, 0x00	; 0
 89e:	e1 f7       	brne	.-8      	; 0x898 <moverAbajoIzquierda+0x14>
 8a0:	00 c0       	rjmp	.+0      	; 0x8a2 <moverAbajoIzquierda+0x1e>
 8a2:	00 00       	nop
		_delay_ms(70);
		PORTD &= ~(1 << MOV_IZQ);
 8a4:	9b b1       	in	r25, 0x0b	; 11
 8a6:	9f 7b       	andi	r25, 0xBF	; 191
 8a8:	9b b9       	out	0x0b, r25	; 11
		
		PORTD |= (1 << MOV_ABAJO);
 8aa:	9b b1       	in	r25, 0x0b	; 11
 8ac:	90 61       	ori	r25, 0x10	; 16
 8ae:	9b b9       	out	0x0b, r25	; 11
 8b0:	6f ef       	ldi	r22, 0xFF	; 255
 8b2:	8a e6       	ldi	r24, 0x6A	; 106
 8b4:	93 e0       	ldi	r25, 0x03	; 3
 8b6:	61 50       	subi	r22, 0x01	; 1
 8b8:	80 40       	sbci	r24, 0x00	; 0
 8ba:	90 40       	sbci	r25, 0x00	; 0
 8bc:	e1 f7       	brne	.-8      	; 0x8b6 <moverAbajoIzquierda+0x32>
 8be:	00 c0       	rjmp	.+0      	; 0x8c0 <moverAbajoIzquierda+0x3c>
 8c0:	00 00       	nop
		_delay_ms(70);
		PORTD &= ~(1 << MOV_ABAJO);
 8c2:	9b b1       	in	r25, 0x0b	; 11
 8c4:	9f 7e       	andi	r25, 0xEF	; 239
 8c6:	9b b9       	out	0x0b, r25	; 11
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}

void moverAbajoIzquierda(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 8c8:	2f 5f       	subi	r18, 0xFF	; 255
 8ca:	3f 4f       	sbci	r19, 0xFF	; 255
 8cc:	24 17       	cp	r18, r20
 8ce:	35 07       	cpc	r19, r21
 8d0:	e8 f2       	brcs	.-70     	; 0x88c <moverAbajoIzquierda+0x8>
		
		PORTD |= (1 << MOV_ABAJO);
		_delay_ms(70);
		PORTD &= ~(1 << MOV_ABAJO);
	}
}
 8d2:	08 95       	ret

Disassembly of section .text.moverAbajoDerecha:

000008d4 <moverAbajoDerecha>:

void moverAbajoDerecha(unsigned int tiempo_ms) {
 8d4:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 8d6:	20 e0       	ldi	r18, 0x00	; 0
 8d8:	30 e0       	ldi	r19, 0x00	; 0
 8da:	20 c0       	rjmp	.+64     	; 0x91c <__stack+0x1d>
		PORTD |= (1 << MOV_DER);
 8dc:	9b b1       	in	r25, 0x0b	; 11
 8de:	90 68       	ori	r25, 0x80	; 128
 8e0:	9b b9       	out	0x0b, r25	; 11
 8e2:	6f ef       	ldi	r22, 0xFF	; 255
 8e4:	8a e6       	ldi	r24, 0x6A	; 106
 8e6:	93 e0       	ldi	r25, 0x03	; 3
 8e8:	61 50       	subi	r22, 0x01	; 1
 8ea:	80 40       	sbci	r24, 0x00	; 0
 8ec:	90 40       	sbci	r25, 0x00	; 0
 8ee:	e1 f7       	brne	.-8      	; 0x8e8 <moverAbajoDerecha+0x14>
 8f0:	00 c0       	rjmp	.+0      	; 0x8f2 <moverAbajoDerecha+0x1e>
 8f2:	00 00       	nop
		_delay_ms(70);
		PORTD &= ~(1 << MOV_DER);
 8f4:	9b b1       	in	r25, 0x0b	; 11
 8f6:	9f 77       	andi	r25, 0x7F	; 127
 8f8:	9b b9       	out	0x0b, r25	; 11
		
		PORTD |= (1 << MOV_ABAJO);
 8fa:	9b b1       	in	r25, 0x0b	; 11
 8fc:	90 61       	ori	r25, 0x10	; 16
 8fe:	9b b9       	out	0x0b, r25	; 11
 900:	6f ef       	ldi	r22, 0xFF	; 255
 902:	8a e6       	ldi	r24, 0x6A	; 106
 904:	93 e0       	ldi	r25, 0x03	; 3
 906:	61 50       	subi	r22, 0x01	; 1
 908:	80 40       	sbci	r24, 0x00	; 0
 90a:	90 40       	sbci	r25, 0x00	; 0
 90c:	e1 f7       	brne	.-8      	; 0x906 <__stack+0x7>
 90e:	00 c0       	rjmp	.+0      	; 0x910 <__stack+0x11>
 910:	00 00       	nop
		_delay_ms(70);
		PORTD &= ~(1 << MOV_ABAJO);
 912:	9b b1       	in	r25, 0x0b	; 11
 914:	9f 7e       	andi	r25, 0xEF	; 239
 916:	9b b9       	out	0x0b, r25	; 11
		PORTD &= ~(1 << MOV_ABAJO);
	}
}

void moverAbajoDerecha(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 918:	2f 5f       	subi	r18, 0xFF	; 255
 91a:	3f 4f       	sbci	r19, 0xFF	; 255
 91c:	24 17       	cp	r18, r20
 91e:	35 07       	cpc	r19, r21
 920:	e8 f2       	brcs	.-70     	; 0x8dc <moverAbajoDerecha+0x8>
		
		PORTD |= (1 << MOV_ABAJO);
		_delay_ms(70);
		PORTD &= ~(1 << MOV_ABAJO);
	}
}
 922:	08 95       	ret

Disassembly of section .text.moverArribaIzquierda30:

00000924 <moverArribaIzquierda30>:

void moverArribaIzquierda30(unsigned int tiempo_ms) {
 924:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 926:	20 e0       	ldi	r18, 0x00	; 0
 928:	30 e0       	ldi	r19, 0x00	; 0
 92a:	20 c0       	rjmp	.+64     	; 0x96c <moverArribaIzquierda30+0x48>
		PORTD |= (1 << MOV_IZQ);
 92c:	9b b1       	in	r25, 0x0b	; 11
 92e:	90 64       	ori	r25, 0x40	; 64
 930:	9b b9       	out	0x0b, r25	; 11
 932:	6f ef       	ldi	r22, 0xFF	; 255
 934:	81 ee       	ldi	r24, 0xE1	; 225
 936:	94 e0       	ldi	r25, 0x04	; 4
 938:	61 50       	subi	r22, 0x01	; 1
 93a:	80 40       	sbci	r24, 0x00	; 0
 93c:	90 40       	sbci	r25, 0x00	; 0
 93e:	e1 f7       	brne	.-8      	; 0x938 <moverArribaIzquierda30+0x14>
 940:	00 c0       	rjmp	.+0      	; 0x942 <moverArribaIzquierda30+0x1e>
 942:	00 00       	nop
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_IZQ);
 944:	9b b1       	in	r25, 0x0b	; 11
 946:	9f 7b       	andi	r25, 0xBF	; 191
 948:	9b b9       	out	0x0b, r25	; 11

		PORTD |= (1 << MOV_ARRIBA);
 94a:	9b b1       	in	r25, 0x0b	; 11
 94c:	90 62       	ori	r25, 0x20	; 32
 94e:	9b b9       	out	0x0b, r25	; 11
 950:	6f ef       	ldi	r22, 0xFF	; 255
 952:	80 e7       	ldi	r24, 0x70	; 112
 954:	92 e0       	ldi	r25, 0x02	; 2
 956:	61 50       	subi	r22, 0x01	; 1
 958:	80 40       	sbci	r24, 0x00	; 0
 95a:	90 40       	sbci	r25, 0x00	; 0
 95c:	e1 f7       	brne	.-8      	; 0x956 <moverArribaIzquierda30+0x32>
 95e:	00 c0       	rjmp	.+0      	; 0x960 <moverArribaIzquierda30+0x3c>
 960:	00 00       	nop
		_delay_ms(50);  
		PORTD &= ~(1 << MOV_ARRIBA);
 962:	9b b1       	in	r25, 0x0b	; 11
 964:	9f 7d       	andi	r25, 0xDF	; 223
 966:	9b b9       	out	0x0b, r25	; 11
		PORTD &= ~(1 << MOV_ABAJO);
	}
}

void moverArribaIzquierda30(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 968:	2f 5f       	subi	r18, 0xFF	; 255
 96a:	3f 4f       	sbci	r19, 0xFF	; 255
 96c:	24 17       	cp	r18, r20
 96e:	35 07       	cpc	r19, r21
 970:	e8 f2       	brcs	.-70     	; 0x92c <moverArribaIzquierda30+0x8>

		PORTD |= (1 << MOV_ARRIBA);
		_delay_ms(50);  
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}
 972:	08 95       	ret

Disassembly of section .text.moverArribaDerecha30:

00000974 <moverArribaDerecha30>:
void moverArribaDerecha30(unsigned int tiempo_ms) {
 974:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 976:	20 e0       	ldi	r18, 0x00	; 0
 978:	30 e0       	ldi	r19, 0x00	; 0
 97a:	20 c0       	rjmp	.+64     	; 0x9bc <moverArribaDerecha30+0x48>
		PORTD |= (1 << MOV_DER);
 97c:	9b b1       	in	r25, 0x0b	; 11
 97e:	90 68       	ori	r25, 0x80	; 128
 980:	9b b9       	out	0x0b, r25	; 11
 982:	6f ef       	ldi	r22, 0xFF	; 255
 984:	81 ee       	ldi	r24, 0xE1	; 225
 986:	94 e0       	ldi	r25, 0x04	; 4
 988:	61 50       	subi	r22, 0x01	; 1
 98a:	80 40       	sbci	r24, 0x00	; 0
 98c:	90 40       	sbci	r25, 0x00	; 0
 98e:	e1 f7       	brne	.-8      	; 0x988 <moverArribaDerecha30+0x14>
 990:	00 c0       	rjmp	.+0      	; 0x992 <moverArribaDerecha30+0x1e>
 992:	00 00       	nop
		_delay_ms(100); 
		PORTD &= ~(1 << MOV_DER);
 994:	9b b1       	in	r25, 0x0b	; 11
 996:	9f 77       	andi	r25, 0x7F	; 127
 998:	9b b9       	out	0x0b, r25	; 11

		PORTD |= (1 << MOV_ARRIBA);
 99a:	9b b1       	in	r25, 0x0b	; 11
 99c:	90 62       	ori	r25, 0x20	; 32
 99e:	9b b9       	out	0x0b, r25	; 11
 9a0:	6f ef       	ldi	r22, 0xFF	; 255
 9a2:	80 e7       	ldi	r24, 0x70	; 112
 9a4:	92 e0       	ldi	r25, 0x02	; 2
 9a6:	61 50       	subi	r22, 0x01	; 1
 9a8:	80 40       	sbci	r24, 0x00	; 0
 9aa:	90 40       	sbci	r25, 0x00	; 0
 9ac:	e1 f7       	brne	.-8      	; 0x9a6 <moverArribaDerecha30+0x32>
 9ae:	00 c0       	rjmp	.+0      	; 0x9b0 <moverArribaDerecha30+0x3c>
 9b0:	00 00       	nop
		_delay_ms(50); 
		PORTD &= ~(1 << MOV_ARRIBA);
 9b2:	9b b1       	in	r25, 0x0b	; 11
 9b4:	9f 7d       	andi	r25, 0xDF	; 223
 9b6:	9b b9       	out	0x0b, r25	; 11
		_delay_ms(50);  
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}
void moverArribaDerecha30(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 9b8:	2f 5f       	subi	r18, 0xFF	; 255
 9ba:	3f 4f       	sbci	r19, 0xFF	; 255
 9bc:	24 17       	cp	r18, r20
 9be:	35 07       	cpc	r19, r21
 9c0:	e8 f2       	brcs	.-70     	; 0x97c <moverArribaDerecha30+0x8>

		PORTD |= (1 << MOV_ARRIBA);
		_delay_ms(50); 
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}
 9c2:	08 95       	ret

Disassembly of section .text.moverAbajoIzquierda30:

000009c4 <moverAbajoIzquierda30>:
void moverAbajoIzquierda30(unsigned int tiempo_ms) {
 9c4:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 9c6:	20 e0       	ldi	r18, 0x00	; 0
 9c8:	30 e0       	ldi	r19, 0x00	; 0
 9ca:	20 c0       	rjmp	.+64     	; 0xa0c <moverAbajoIzquierda30+0x48>
		PORTD |= (1 << MOV_IZQ);
 9cc:	9b b1       	in	r25, 0x0b	; 11
 9ce:	90 64       	ori	r25, 0x40	; 64
 9d0:	9b b9       	out	0x0b, r25	; 11
 9d2:	6f ef       	ldi	r22, 0xFF	; 255
 9d4:	81 ee       	ldi	r24, 0xE1	; 225
 9d6:	94 e0       	ldi	r25, 0x04	; 4
 9d8:	61 50       	subi	r22, 0x01	; 1
 9da:	80 40       	sbci	r24, 0x00	; 0
 9dc:	90 40       	sbci	r25, 0x00	; 0
 9de:	e1 f7       	brne	.-8      	; 0x9d8 <moverAbajoIzquierda30+0x14>
 9e0:	00 c0       	rjmp	.+0      	; 0x9e2 <moverAbajoIzquierda30+0x1e>
 9e2:	00 00       	nop
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_IZQ);
 9e4:	9b b1       	in	r25, 0x0b	; 11
 9e6:	9f 7b       	andi	r25, 0xBF	; 191
 9e8:	9b b9       	out	0x0b, r25	; 11

		PORTD |= (1 << MOV_ABAJO);
 9ea:	9b b1       	in	r25, 0x0b	; 11
 9ec:	90 61       	ori	r25, 0x10	; 16
 9ee:	9b b9       	out	0x0b, r25	; 11
 9f0:	6f ef       	ldi	r22, 0xFF	; 255
 9f2:	80 e7       	ldi	r24, 0x70	; 112
 9f4:	92 e0       	ldi	r25, 0x02	; 2
 9f6:	61 50       	subi	r22, 0x01	; 1
 9f8:	80 40       	sbci	r24, 0x00	; 0
 9fa:	90 40       	sbci	r25, 0x00	; 0
 9fc:	e1 f7       	brne	.-8      	; 0x9f6 <moverAbajoIzquierda30+0x32>
 9fe:	00 c0       	rjmp	.+0      	; 0xa00 <moverAbajoIzquierda30+0x3c>
 a00:	00 00       	nop
		_delay_ms(50);  
		PORTD &= ~(1 << MOV_ABAJO);
 a02:	9b b1       	in	r25, 0x0b	; 11
 a04:	9f 7e       	andi	r25, 0xEF	; 239
 a06:	9b b9       	out	0x0b, r25	; 11
		_delay_ms(50); 
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}
void moverAbajoIzquierda30(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 a08:	2f 5f       	subi	r18, 0xFF	; 255
 a0a:	3f 4f       	sbci	r19, 0xFF	; 255
 a0c:	24 17       	cp	r18, r20
 a0e:	35 07       	cpc	r19, r21
 a10:	e8 f2       	brcs	.-70     	; 0x9cc <moverAbajoIzquierda30+0x8>

		PORTD |= (1 << MOV_ABAJO);
		_delay_ms(50);  
		PORTD &= ~(1 << MOV_ABAJO);
	}
}
 a12:	08 95       	ret

Disassembly of section .text.moverAbajoDerecha30:

00000a14 <moverAbajoDerecha30>:
void moverAbajoDerecha30(unsigned int tiempo_ms) {
 a14:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 a16:	20 e0       	ldi	r18, 0x00	; 0
 a18:	30 e0       	ldi	r19, 0x00	; 0
 a1a:	20 c0       	rjmp	.+64     	; 0xa5c <moverAbajoDerecha30+0x48>
		PORTD |= (1 << MOV_DER);
 a1c:	9b b1       	in	r25, 0x0b	; 11
 a1e:	90 68       	ori	r25, 0x80	; 128
 a20:	9b b9       	out	0x0b, r25	; 11
 a22:	6f ef       	ldi	r22, 0xFF	; 255
 a24:	81 ee       	ldi	r24, 0xE1	; 225
 a26:	94 e0       	ldi	r25, 0x04	; 4
 a28:	61 50       	subi	r22, 0x01	; 1
 a2a:	80 40       	sbci	r24, 0x00	; 0
 a2c:	90 40       	sbci	r25, 0x00	; 0
 a2e:	e1 f7       	brne	.-8      	; 0xa28 <moverAbajoDerecha30+0x14>
 a30:	00 c0       	rjmp	.+0      	; 0xa32 <moverAbajoDerecha30+0x1e>
 a32:	00 00       	nop
		_delay_ms(100); 
		PORTD &= ~(1 << MOV_DER);
 a34:	9b b1       	in	r25, 0x0b	; 11
 a36:	9f 77       	andi	r25, 0x7F	; 127
 a38:	9b b9       	out	0x0b, r25	; 11

		PORTD |= (1 << MOV_ABAJO);
 a3a:	9b b1       	in	r25, 0x0b	; 11
 a3c:	90 61       	ori	r25, 0x10	; 16
 a3e:	9b b9       	out	0x0b, r25	; 11
 a40:	6f ef       	ldi	r22, 0xFF	; 255
 a42:	80 e7       	ldi	r24, 0x70	; 112
 a44:	92 e0       	ldi	r25, 0x02	; 2
 a46:	61 50       	subi	r22, 0x01	; 1
 a48:	80 40       	sbci	r24, 0x00	; 0
 a4a:	90 40       	sbci	r25, 0x00	; 0
 a4c:	e1 f7       	brne	.-8      	; 0xa46 <moverAbajoDerecha30+0x32>
 a4e:	00 c0       	rjmp	.+0      	; 0xa50 <moverAbajoDerecha30+0x3c>
 a50:	00 00       	nop
		_delay_ms(50);
		PORTD &= ~(1 << MOV_ABAJO);
 a52:	9b b1       	in	r25, 0x0b	; 11
 a54:	9f 7e       	andi	r25, 0xEF	; 239
 a56:	9b b9       	out	0x0b, r25	; 11
		_delay_ms(50);  
		PORTD &= ~(1 << MOV_ABAJO);
	}
}
void moverAbajoDerecha30(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 a58:	2f 5f       	subi	r18, 0xFF	; 255
 a5a:	3f 4f       	sbci	r19, 0xFF	; 255
 a5c:	24 17       	cp	r18, r20
 a5e:	35 07       	cpc	r19, r21
 a60:	e8 f2       	brcs	.-70     	; 0xa1c <moverAbajoDerecha30+0x8>

		PORTD |= (1 << MOV_ABAJO);
		_delay_ms(50);
		PORTD &= ~(1 << MOV_ABAJO);
	}
}
 a62:	08 95       	ret

Disassembly of section .text.moverArribaIzquierda60:

00000a64 <moverArribaIzquierda60>:
void moverArribaIzquierda60(unsigned int tiempo_ms) {
 a64:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 a66:	20 e0       	ldi	r18, 0x00	; 0
 a68:	30 e0       	ldi	r19, 0x00	; 0
 a6a:	20 c0       	rjmp	.+64     	; 0xaac <moverArribaIzquierda60+0x48>
		PORTD |= (1 << MOV_IZQ);
 a6c:	9b b1       	in	r25, 0x0b	; 11
 a6e:	90 64       	ori	r25, 0x40	; 64
 a70:	9b b9       	out	0x0b, r25	; 11
 a72:	6f ef       	ldi	r22, 0xFF	; 255
 a74:	80 e7       	ldi	r24, 0x70	; 112
 a76:	92 e0       	ldi	r25, 0x02	; 2
 a78:	61 50       	subi	r22, 0x01	; 1
 a7a:	80 40       	sbci	r24, 0x00	; 0
 a7c:	90 40       	sbci	r25, 0x00	; 0
 a7e:	e1 f7       	brne	.-8      	; 0xa78 <moverArribaIzquierda60+0x14>
 a80:	00 c0       	rjmp	.+0      	; 0xa82 <moverArribaIzquierda60+0x1e>
 a82:	00 00       	nop
		_delay_ms(50);  
		PORTD &= ~(1 << MOV_IZQ);
 a84:	9b b1       	in	r25, 0x0b	; 11
 a86:	9f 7b       	andi	r25, 0xBF	; 191
 a88:	9b b9       	out	0x0b, r25	; 11

		PORTD |= (1 << MOV_ARRIBA);
 a8a:	9b b1       	in	r25, 0x0b	; 11
 a8c:	90 62       	ori	r25, 0x20	; 32
 a8e:	9b b9       	out	0x0b, r25	; 11
 a90:	6f ef       	ldi	r22, 0xFF	; 255
 a92:	81 ee       	ldi	r24, 0xE1	; 225
 a94:	94 e0       	ldi	r25, 0x04	; 4
 a96:	61 50       	subi	r22, 0x01	; 1
 a98:	80 40       	sbci	r24, 0x00	; 0
 a9a:	90 40       	sbci	r25, 0x00	; 0
 a9c:	e1 f7       	brne	.-8      	; 0xa96 <moverArribaIzquierda60+0x32>
 a9e:	00 c0       	rjmp	.+0      	; 0xaa0 <moverArribaIzquierda60+0x3c>
 aa0:	00 00       	nop
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ARRIBA);
 aa2:	9b b1       	in	r25, 0x0b	; 11
 aa4:	9f 7d       	andi	r25, 0xDF	; 223
 aa6:	9b b9       	out	0x0b, r25	; 11
		_delay_ms(50);
		PORTD &= ~(1 << MOV_ABAJO);
	}
}
void moverArribaIzquierda60(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 aa8:	2f 5f       	subi	r18, 0xFF	; 255
 aaa:	3f 4f       	sbci	r19, 0xFF	; 255
 aac:	24 17       	cp	r18, r20
 aae:	35 07       	cpc	r19, r21
 ab0:	e8 f2       	brcs	.-70     	; 0xa6c <moverArribaIzquierda60+0x8>

		PORTD |= (1 << MOV_ARRIBA);
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}
 ab2:	08 95       	ret

Disassembly of section .text.moverArribaDerecha60:

00000ab4 <moverArribaDerecha60>:
void moverArribaDerecha60(unsigned int tiempo_ms) {
 ab4:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 ab6:	20 e0       	ldi	r18, 0x00	; 0
 ab8:	30 e0       	ldi	r19, 0x00	; 0
 aba:	20 c0       	rjmp	.+64     	; 0xafc <moverArribaDerecha60+0x48>
		PORTD |= (1 << MOV_DER);
 abc:	9b b1       	in	r25, 0x0b	; 11
 abe:	90 68       	ori	r25, 0x80	; 128
 ac0:	9b b9       	out	0x0b, r25	; 11
 ac2:	6f ef       	ldi	r22, 0xFF	; 255
 ac4:	80 e7       	ldi	r24, 0x70	; 112
 ac6:	92 e0       	ldi	r25, 0x02	; 2
 ac8:	61 50       	subi	r22, 0x01	; 1
 aca:	80 40       	sbci	r24, 0x00	; 0
 acc:	90 40       	sbci	r25, 0x00	; 0
 ace:	e1 f7       	brne	.-8      	; 0xac8 <moverArribaDerecha60+0x14>
 ad0:	00 c0       	rjmp	.+0      	; 0xad2 <moverArribaDerecha60+0x1e>
 ad2:	00 00       	nop
		_delay_ms(50);  
		PORTD &= ~(1 << MOV_DER);
 ad4:	9b b1       	in	r25, 0x0b	; 11
 ad6:	9f 77       	andi	r25, 0x7F	; 127
 ad8:	9b b9       	out	0x0b, r25	; 11

		PORTD |= (1 << MOV_ARRIBA);
 ada:	9b b1       	in	r25, 0x0b	; 11
 adc:	90 62       	ori	r25, 0x20	; 32
 ade:	9b b9       	out	0x0b, r25	; 11
 ae0:	6f ef       	ldi	r22, 0xFF	; 255
 ae2:	81 ee       	ldi	r24, 0xE1	; 225
 ae4:	94 e0       	ldi	r25, 0x04	; 4
 ae6:	61 50       	subi	r22, 0x01	; 1
 ae8:	80 40       	sbci	r24, 0x00	; 0
 aea:	90 40       	sbci	r25, 0x00	; 0
 aec:	e1 f7       	brne	.-8      	; 0xae6 <moverArribaDerecha60+0x32>
 aee:	00 c0       	rjmp	.+0      	; 0xaf0 <moverArribaDerecha60+0x3c>
 af0:	00 00       	nop
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ARRIBA);
 af2:	9b b1       	in	r25, 0x0b	; 11
 af4:	9f 7d       	andi	r25, 0xDF	; 223
 af6:	9b b9       	out	0x0b, r25	; 11
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}
void moverArribaDerecha60(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 af8:	2f 5f       	subi	r18, 0xFF	; 255
 afa:	3f 4f       	sbci	r19, 0xFF	; 255
 afc:	24 17       	cp	r18, r20
 afe:	35 07       	cpc	r19, r21
 b00:	e8 f2       	brcs	.-70     	; 0xabc <moverArribaDerecha60+0x8>

		PORTD |= (1 << MOV_ARRIBA);
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}
 b02:	08 95       	ret

Disassembly of section .text.moverAbajoIzquierda60:

00000b04 <moverAbajoIzquierda60>:
void moverAbajoIzquierda60(unsigned int tiempo_ms) {
 b04:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 b06:	20 e0       	ldi	r18, 0x00	; 0
 b08:	30 e0       	ldi	r19, 0x00	; 0
 b0a:	20 c0       	rjmp	.+64     	; 0xb4c <moverAbajoIzquierda60+0x48>
		PORTD |= (1 << MOV_IZQ);
 b0c:	9b b1       	in	r25, 0x0b	; 11
 b0e:	90 64       	ori	r25, 0x40	; 64
 b10:	9b b9       	out	0x0b, r25	; 11
 b12:	6f ef       	ldi	r22, 0xFF	; 255
 b14:	80 e7       	ldi	r24, 0x70	; 112
 b16:	92 e0       	ldi	r25, 0x02	; 2
 b18:	61 50       	subi	r22, 0x01	; 1
 b1a:	80 40       	sbci	r24, 0x00	; 0
 b1c:	90 40       	sbci	r25, 0x00	; 0
 b1e:	e1 f7       	brne	.-8      	; 0xb18 <moverAbajoIzquierda60+0x14>
 b20:	00 c0       	rjmp	.+0      	; 0xb22 <moverAbajoIzquierda60+0x1e>
 b22:	00 00       	nop
		_delay_ms(50);  
		PORTD &= ~(1 << MOV_IZQ);
 b24:	9b b1       	in	r25, 0x0b	; 11
 b26:	9f 7b       	andi	r25, 0xBF	; 191
 b28:	9b b9       	out	0x0b, r25	; 11

		PORTD |= (1 << MOV_ABAJO);
 b2a:	9b b1       	in	r25, 0x0b	; 11
 b2c:	90 61       	ori	r25, 0x10	; 16
 b2e:	9b b9       	out	0x0b, r25	; 11
 b30:	6f ef       	ldi	r22, 0xFF	; 255
 b32:	81 ee       	ldi	r24, 0xE1	; 225
 b34:	94 e0       	ldi	r25, 0x04	; 4
 b36:	61 50       	subi	r22, 0x01	; 1
 b38:	80 40       	sbci	r24, 0x00	; 0
 b3a:	90 40       	sbci	r25, 0x00	; 0
 b3c:	e1 f7       	brne	.-8      	; 0xb36 <moverAbajoIzquierda60+0x32>
 b3e:	00 c0       	rjmp	.+0      	; 0xb40 <moverAbajoIzquierda60+0x3c>
 b40:	00 00       	nop
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ABAJO);
 b42:	9b b1       	in	r25, 0x0b	; 11
 b44:	9f 7e       	andi	r25, 0xEF	; 239
 b46:	9b b9       	out	0x0b, r25	; 11
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ARRIBA);
	}
}
void moverAbajoIzquierda60(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 b48:	2f 5f       	subi	r18, 0xFF	; 255
 b4a:	3f 4f       	sbci	r19, 0xFF	; 255
 b4c:	24 17       	cp	r18, r20
 b4e:	35 07       	cpc	r19, r21
 b50:	e8 f2       	brcs	.-70     	; 0xb0c <moverAbajoIzquierda60+0x8>

		PORTD |= (1 << MOV_ABAJO);
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ABAJO);
	}
}
 b52:	08 95       	ret

Disassembly of section .text.moverAbajoDerecha60:

00000b54 <moverAbajoDerecha60>:
void moverAbajoDerecha60(unsigned int tiempo_ms) {
 b54:	ac 01       	movw	r20, r24
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 b56:	20 e0       	ldi	r18, 0x00	; 0
 b58:	30 e0       	ldi	r19, 0x00	; 0
 b5a:	20 c0       	rjmp	.+64     	; 0xb9c <moverAbajoDerecha60+0x48>
		PORTD |= (1 << MOV_DER);
 b5c:	9b b1       	in	r25, 0x0b	; 11
 b5e:	90 68       	ori	r25, 0x80	; 128
 b60:	9b b9       	out	0x0b, r25	; 11
 b62:	6f ef       	ldi	r22, 0xFF	; 255
 b64:	80 e7       	ldi	r24, 0x70	; 112
 b66:	92 e0       	ldi	r25, 0x02	; 2
 b68:	61 50       	subi	r22, 0x01	; 1
 b6a:	80 40       	sbci	r24, 0x00	; 0
 b6c:	90 40       	sbci	r25, 0x00	; 0
 b6e:	e1 f7       	brne	.-8      	; 0xb68 <moverAbajoDerecha60+0x14>
 b70:	00 c0       	rjmp	.+0      	; 0xb72 <moverAbajoDerecha60+0x1e>
 b72:	00 00       	nop
		_delay_ms(50);  
		PORTD &= ~(1 << MOV_DER);
 b74:	9b b1       	in	r25, 0x0b	; 11
 b76:	9f 77       	andi	r25, 0x7F	; 127
 b78:	9b b9       	out	0x0b, r25	; 11

		PORTD |= (1 << MOV_ABAJO);
 b7a:	9b b1       	in	r25, 0x0b	; 11
 b7c:	90 61       	ori	r25, 0x10	; 16
 b7e:	9b b9       	out	0x0b, r25	; 11
 b80:	6f ef       	ldi	r22, 0xFF	; 255
 b82:	81 ee       	ldi	r24, 0xE1	; 225
 b84:	94 e0       	ldi	r25, 0x04	; 4
 b86:	61 50       	subi	r22, 0x01	; 1
 b88:	80 40       	sbci	r24, 0x00	; 0
 b8a:	90 40       	sbci	r25, 0x00	; 0
 b8c:	e1 f7       	brne	.-8      	; 0xb86 <moverAbajoDerecha60+0x32>
 b8e:	00 c0       	rjmp	.+0      	; 0xb90 <moverAbajoDerecha60+0x3c>
 b90:	00 00       	nop
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ABAJO);
 b92:	9b b1       	in	r25, 0x0b	; 11
 b94:	9f 7e       	andi	r25, 0xEF	; 239
 b96:	9b b9       	out	0x0b, r25	; 11
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ABAJO);
	}
}
void moverAbajoDerecha60(unsigned int tiempo_ms) {
	for (unsigned int i = 0; i < tiempo_ms; i++) {
 b98:	2f 5f       	subi	r18, 0xFF	; 255
 b9a:	3f 4f       	sbci	r19, 0xFF	; 255
 b9c:	24 17       	cp	r18, r20
 b9e:	35 07       	cpc	r19, r21
 ba0:	e8 f2       	brcs	.-70     	; 0xb5c <moverAbajoDerecha60+0x8>

		PORTD |= (1 << MOV_ABAJO);
		_delay_ms(100);  
		PORTD &= ~(1 << MOV_ABAJO);
	}
 ba2:	08 95       	ret

Disassembly of section .text.seleccionarFigura:

000001b4 <seleccionarFigura>:
	UART_sendString("5. Dibujar Manzana\n");
	UART_sendString("Seleccione una opcion (1-5): ");
}

// Seleccionar figura según la entrada del usuario
void seleccionarFigura(void){
 1b4:	cf 93       	push	r28
	char opcion = UART_receiveChar(); // Leer opción del usuario
 1b6:	0e 94 67 06 	call	0xcce	; 0xcce <UART_receiveChar>
 1ba:	c8 2f       	mov	r28, r24
	UART_sendChar(opcion);
 1bc:	0e 94 60 06 	call	0xcc0	; 0xcc0 <UART_sendChar>

	switch(opcion) {
 1c0:	c3 33       	cpi	r28, 0x33	; 51
 1c2:	09 f4       	brne	.+2      	; 0x1c6 <seleccionarFigura+0x12>
 1c4:	cc c0       	rjmp	.+408    	; 0x35e <seleccionarFigura+0x1aa>
 1c6:	30 f4       	brcc	.+12     	; 0x1d4 <seleccionarFigura+0x20>
 1c8:	c1 33       	cpi	r28, 0x31	; 49
 1ca:	59 f0       	breq	.+22     	; 0x1e2 <seleccionarFigura+0x2e>
 1cc:	c2 33       	cpi	r28, 0x32	; 50
 1ce:	09 f4       	brne	.+2      	; 0x1d2 <seleccionarFigura+0x1e>
 1d0:	7d c0       	rjmp	.+250    	; 0x2cc <seleccionarFigura+0x118>
 1d2:	01 c3       	rjmp	.+1538   	; 0x7d6 <__EEPROM_REGION_LENGTH__+0x3d6>
 1d4:	c4 33       	cpi	r28, 0x34	; 52
 1d6:	09 f4       	brne	.+2      	; 0x1da <seleccionarFigura+0x26>
 1d8:	22 c1       	rjmp	.+580    	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 1da:	c5 33       	cpi	r28, 0x35	; 53
 1dc:	09 f4       	brne	.+2      	; 0x1e0 <seleccionarFigura+0x2c>
 1de:	5b c2       	rjmp	.+1206   	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
 1e0:	fa c2       	rjmp	.+1524   	; 0x7d6 <__EEPROM_REGION_LENGTH__+0x3d6>
		case '1':
		UART_sendString("\nSeleccionado: Circulo\n");
 1e2:	69 e1       	ldi	r22, 0x19	; 25
 1e4:	71 e0       	ldi	r23, 0x01	; 1
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
		
		
		moverIzquierda(7000);
 1ec:	88 e5       	ldi	r24, 0x58	; 88
 1ee:	9b e1       	ldi	r25, 0x1B	; 27
 1f0:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		moverAbajo(1000);
 1f4:	88 ee       	ldi	r24, 0xE8	; 232
 1f6:	93 e0       	ldi	r25, 0x03	; 3
 1f8:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		activarSolenoide();
 1fc:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 200:	2f ef       	ldi	r18, 0xFF	; 255
 202:	87 ea       	ldi	r24, 0xA7	; 167
 204:	91 e6       	ldi	r25, 0x61	; 97
 206:	21 50       	subi	r18, 0x01	; 1
 208:	80 40       	sbci	r24, 0x00	; 0
 20a:	90 40       	sbci	r25, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <seleccionarFigura+0x52>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <seleccionarFigura+0x5c>
 210:	00 00       	nop
		_delay_ms(2000);
		
		moverDerecha(455);
 212:	87 ec       	ldi	r24, 0xC7	; 199
 214:	91 e0       	ldi	r25, 0x01	; 1
 216:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		
		moverAbajoDerecha30(4);
 21a:	84 e0       	ldi	r24, 0x04	; 4
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	0e 94 0a 05 	call	0xa14	; 0xa14 <moverAbajoDerecha30>
		moverAbajoDerecha(5);
 222:	85 e0       	ldi	r24, 0x05	; 5
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <moverAbajoDerecha>
		moverAbajoDerecha60(4);
 22a:	84 e0       	ldi	r24, 0x04	; 4
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	0e 94 aa 05 	call	0xb54	; 0xb54 <moverAbajoDerecha60>
		
		
		
		moverAbajo(455);
 232:	87 ec       	ldi	r24, 0xC7	; 199
 234:	91 e0       	ldi	r25, 0x01	; 1
 236:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		
		moverAbajoIzquierda60(4);
 23a:	84 e0       	ldi	r24, 0x04	; 4
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	0e 94 82 05 	call	0xb04	; 0xb04 <moverAbajoIzquierda60>
		moverAbajoIzquierda(5);
 242:	85 e0       	ldi	r24, 0x05	; 5
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	0e 94 42 04 	call	0x884	; 0x884 <moverAbajoIzquierda>
		moverAbajoIzquierda30(4);
 24a:	84 e0       	ldi	r24, 0x04	; 4
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <moverAbajoIzquierda30>
		
		moverIzquierda(455);
 252:	87 ec       	ldi	r24, 0xC7	; 199
 254:	91 e0       	ldi	r25, 0x01	; 1
 256:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		
		
		moverArribaIzquierda30(4);
 25a:	84 e0       	ldi	r24, 0x04	; 4
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	0e 94 92 04 	call	0x924	; 0x924 <moverArribaIzquierda30>
		moverArribaIzquierda(5);
 262:	85 e0       	ldi	r24, 0x05	; 5
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <moverArribaIzquierda>
		moverArribaIzquierda60(4);
 26a:	84 e0       	ldi	r24, 0x04	; 4
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	0e 94 32 05 	call	0xa64	; 0xa64 <moverArribaIzquierda60>
		
		
		
		moverArriba(455);
 272:	87 ec       	ldi	r24, 0xC7	; 199
 274:	91 e0       	ldi	r25, 0x01	; 1
 276:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		
		moverArribaDerecha60(4);
 27a:	84 e0       	ldi	r24, 0x04	; 4
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	0e 94 5a 05 	call	0xab4	; 0xab4 <moverArribaDerecha60>
		moverArribaDerecha(5);
 282:	85 e0       	ldi	r24, 0x05	; 5
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	0e 94 1a 04 	call	0x834	; 0x834 <moverArribaDerecha>
		moverArribaDerecha30(4);
 28a:	84 e0       	ldi	r24, 0x04	; 4
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	0e 94 ba 04 	call	0x974	; 0x974 <moverArribaDerecha30>
 292:	2f ef       	ldi	r18, 0xFF	; 255
 294:	87 ea       	ldi	r24, 0xA7	; 167
 296:	91 e6       	ldi	r25, 0x61	; 97
 298:	21 50       	subi	r18, 0x01	; 1
 29a:	80 40       	sbci	r24, 0x00	; 0
 29c:	90 40       	sbci	r25, 0x00	; 0
 29e:	e1 f7       	brne	.-8      	; 0x298 <seleccionarFigura+0xe4>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <seleccionarFigura+0xee>
 2a2:	00 00       	nop
		
		_delay_ms(2000);
		desactivarSolenoide();
 2a4:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 2a8:	2f ef       	ldi	r18, 0xFF	; 255
 2aa:	87 ea       	ldi	r24, 0xA7	; 167
 2ac:	91 e6       	ldi	r25, 0x61	; 97
 2ae:	21 50       	subi	r18, 0x01	; 1
 2b0:	80 40       	sbci	r24, 0x00	; 0
 2b2:	90 40       	sbci	r25, 0x00	; 0
 2b4:	e1 f7       	brne	.-8      	; 0x2ae <seleccionarFigura+0xfa>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <seleccionarFigura+0x104>
 2b8:	00 00       	nop
		_delay_ms(2000);
		
		moverArriba(1001);
 2ba:	89 ee       	ldi	r24, 0xE9	; 233
 2bc:	93 e0       	ldi	r25, 0x03	; 3
 2be:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		moverDerecha(7001);
 2c2:	89 e5       	ldi	r24, 0x59	; 89
 2c4:	9b e1       	ldi	r25, 0x1B	; 27
 2c6:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		
		
		break;
 2ca:	8a c2       	rjmp	.+1300   	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
		case '2':
		UART_sendString("\nSeleccionado: Triangulo\n");
 2cc:	61 e3       	ldi	r22, 0x31	; 49
 2ce:	71 e0       	ldi	r23, 0x01	; 1
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
		
		moverIzquierda(20000);
 2d6:	80 e2       	ldi	r24, 0x20	; 32
 2d8:	9e e4       	ldi	r25, 0x4E	; 78
 2da:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		moverAbajo(1000);
 2de:	88 ee       	ldi	r24, 0xE8	; 232
 2e0:	93 e0       	ldi	r25, 0x03	; 3
 2e2:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		moverAbajoIzquierda(30);
 2e6:	8e e1       	ldi	r24, 0x1E	; 30
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	0e 94 42 04 	call	0x884	; 0x884 <moverAbajoIzquierda>
		activarSolenoide();
 2ee:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 2f2:	2f ef       	ldi	r18, 0xFF	; 255
 2f4:	81 e1       	ldi	r24, 0x11	; 17
 2f6:	9a e7       	ldi	r25, 0x7A	; 122
 2f8:	21 50       	subi	r18, 0x01	; 1
 2fa:	80 40       	sbci	r24, 0x00	; 0
 2fc:	90 40       	sbci	r25, 0x00	; 0
 2fe:	e1 f7       	brne	.-8      	; 0x2f8 <seleccionarFigura+0x144>
 300:	00 c0       	rjmp	.+0      	; 0x302 <seleccionarFigura+0x14e>
 302:	00 00       	nop
		_delay_ms(2500);
		moverArribaDerecha(30);
 304:	8e e1       	ldi	r24, 0x1E	; 30
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	0e 94 1a 04 	call	0x834	; 0x834 <moverArribaDerecha>
		moverAbajoDerecha(30);
 30c:	8e e1       	ldi	r24, 0x1E	; 30
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <moverAbajoDerecha>
		moverIzquierda(4545);
 314:	81 ec       	ldi	r24, 0xC1	; 193
 316:	91 e1       	ldi	r25, 0x11	; 17
 318:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
 31c:	2f ef       	ldi	r18, 0xFF	; 255
 31e:	81 e1       	ldi	r24, 0x11	; 17
 320:	9a e7       	ldi	r25, 0x7A	; 122
 322:	21 50       	subi	r18, 0x01	; 1
 324:	80 40       	sbci	r24, 0x00	; 0
 326:	90 40       	sbci	r25, 0x00	; 0
 328:	e1 f7       	brne	.-8      	; 0x322 <seleccionarFigura+0x16e>
 32a:	00 c0       	rjmp	.+0      	; 0x32c <seleccionarFigura+0x178>
 32c:	00 00       	nop
		_delay_ms(2500);
		desactivarSolenoide();
 32e:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 332:	2f ef       	ldi	r18, 0xFF	; 255
 334:	81 e1       	ldi	r24, 0x11	; 17
 336:	9a e7       	ldi	r25, 0x7A	; 122
 338:	21 50       	subi	r18, 0x01	; 1
 33a:	80 40       	sbci	r24, 0x00	; 0
 33c:	90 40       	sbci	r25, 0x00	; 0
 33e:	e1 f7       	brne	.-8      	; 0x338 <seleccionarFigura+0x184>
 340:	00 c0       	rjmp	.+0      	; 0x342 <seleccionarFigura+0x18e>
 342:	00 00       	nop
		_delay_ms(2500);
		
		moverArribaDerecha(30);
 344:	8e e1       	ldi	r24, 0x1E	; 30
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	0e 94 1a 04 	call	0x834	; 0x834 <moverArribaDerecha>
		moverArriba(1000);
 34c:	88 ee       	ldi	r24, 0xE8	; 232
 34e:	93 e0       	ldi	r25, 0x03	; 3
 350:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		moverDerecha(20000);
 354:	80 e2       	ldi	r24, 0x20	; 32
 356:	9e e4       	ldi	r25, 0x4E	; 78
 358:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		
		break;
 35c:	41 c2       	rjmp	.+1154   	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
		case '3':
		UART_sendString("\nSeleccionado: Cruz\n");
 35e:	6b e4       	ldi	r22, 0x4B	; 75
 360:	71 e0       	ldi	r23, 0x01	; 1
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
		
		moverIzquierda(11000);
 368:	88 ef       	ldi	r24, 0xF8	; 248
 36a:	9a e2       	ldi	r25, 0x2A	; 42
 36c:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		moverAbajo(1000);
 370:	88 ee       	ldi	r24, 0xE8	; 232
 372:	93 e0       	ldi	r25, 0x03	; 3
 374:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		activarSolenoide();
 378:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 37c:	2f ef       	ldi	r18, 0xFF	; 255
 37e:	87 ea       	ldi	r24, 0xA7	; 167
 380:	91 e6       	ldi	r25, 0x61	; 97
 382:	21 50       	subi	r18, 0x01	; 1
 384:	80 40       	sbci	r24, 0x00	; 0
 386:	90 40       	sbci	r25, 0x00	; 0
 388:	e1 f7       	brne	.-8      	; 0x382 <seleccionarFigura+0x1ce>
 38a:	00 c0       	rjmp	.+0      	; 0x38c <seleccionarFigura+0x1d8>
 38c:	00 00       	nop
		_delay_ms(2000);
		
		
		moverAbajoDerecha(30);
 38e:	8e e1       	ldi	r24, 0x1E	; 30
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <moverAbajoDerecha>
 396:	2f ef       	ldi	r18, 0xFF	; 255
 398:	83 ed       	ldi	r24, 0xD3	; 211
 39a:	90 e3       	ldi	r25, 0x30	; 48
 39c:	21 50       	subi	r18, 0x01	; 1
 39e:	80 40       	sbci	r24, 0x00	; 0
 3a0:	90 40       	sbci	r25, 0x00	; 0
 3a2:	e1 f7       	brne	.-8      	; 0x39c <seleccionarFigura+0x1e8>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <seleccionarFigura+0x1f2>
 3a6:	00 00       	nop
		
		
		_delay_ms(1000);
		desactivarSolenoide();
 3a8:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 3ac:	2f ef       	ldi	r18, 0xFF	; 255
 3ae:	83 ed       	ldi	r24, 0xD3	; 211
 3b0:	90 e3       	ldi	r25, 0x30	; 48
 3b2:	21 50       	subi	r18, 0x01	; 1
 3b4:	80 40       	sbci	r24, 0x00	; 0
 3b6:	90 40       	sbci	r25, 0x00	; 0
 3b8:	e1 f7       	brne	.-8      	; 0x3b2 <seleccionarFigura+0x1fe>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <seleccionarFigura+0x208>
 3bc:	00 00       	nop
		_delay_ms(1000);
		
		moverArriba(2100);
 3be:	84 e3       	ldi	r24, 0x34	; 52
 3c0:	98 e0       	ldi	r25, 0x08	; 8
 3c2:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		
		activarSolenoide();
 3c6:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 3ca:	2f ef       	ldi	r18, 0xFF	; 255
 3cc:	87 ea       	ldi	r24, 0xA7	; 167
 3ce:	91 e6       	ldi	r25, 0x61	; 97
 3d0:	21 50       	subi	r18, 0x01	; 1
 3d2:	80 40       	sbci	r24, 0x00	; 0
 3d4:	90 40       	sbci	r25, 0x00	; 0
 3d6:	e1 f7       	brne	.-8      	; 0x3d0 <seleccionarFigura+0x21c>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <seleccionarFigura+0x226>
 3da:	00 00       	nop
		_delay_ms(2000);
		moverAbajoIzquierda(30);
 3dc:	8e e1       	ldi	r24, 0x1E	; 30
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	0e 94 42 04 	call	0x884	; 0x884 <moverAbajoIzquierda>
 3e4:	2f ef       	ldi	r18, 0xFF	; 255
 3e6:	83 ed       	ldi	r24, 0xD3	; 211
 3e8:	90 e3       	ldi	r25, 0x30	; 48
 3ea:	21 50       	subi	r18, 0x01	; 1
 3ec:	80 40       	sbci	r24, 0x00	; 0
 3ee:	90 40       	sbci	r25, 0x00	; 0
 3f0:	e1 f7       	brne	.-8      	; 0x3ea <seleccionarFigura+0x236>
 3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <seleccionarFigura+0x240>
 3f4:	00 00       	nop
		
		_delay_ms(1000);
		desactivarSolenoide();
 3f6:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 3fa:	2f ef       	ldi	r18, 0xFF	; 255
 3fc:	83 ed       	ldi	r24, 0xD3	; 211
 3fe:	90 e3       	ldi	r25, 0x30	; 48
 400:	21 50       	subi	r18, 0x01	; 1
 402:	80 40       	sbci	r24, 0x00	; 0
 404:	90 40       	sbci	r25, 0x00	; 0
 406:	e1 f7       	brne	.-8      	; 0x400 <__EEPROM_REGION_LENGTH__>
 408:	00 c0       	rjmp	.+0      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 40a:	00 00       	nop
		_delay_ms(1000);
		
		moverArriba(5000);
 40c:	88 e8       	ldi	r24, 0x88	; 136
 40e:	93 e1       	ldi	r25, 0x13	; 19
 410:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		moverDerecha(15000);
 414:	88 e9       	ldi	r24, 0x98	; 152
 416:	9a e3       	ldi	r25, 0x3A	; 58
 418:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		
		break;
 41c:	e1 c1       	rjmp	.+962    	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
		case '4':
		UART_sendString("\nSeleccionado: Perro\n");
 41e:	60 e6       	ldi	r22, 0x60	; 96
 420:	71 e0       	ldi	r23, 0x01	; 1
 422:	80 e0       	ldi	r24, 0x00	; 0
 424:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
		
		moverIzquierda(10000);
 428:	80 e1       	ldi	r24, 0x10	; 16
 42a:	97 e2       	ldi	r25, 0x27	; 39
 42c:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		moverAbajo(5000);
 430:	88 e8       	ldi	r24, 0x88	; 136
 432:	93 e1       	ldi	r25, 0x13	; 19
 434:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		//Contorno cabeza
		activarSolenoide();
 438:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 43c:	2f ef       	ldi	r18, 0xFF	; 255
 43e:	87 ea       	ldi	r24, 0xA7	; 167
 440:	91 e6       	ldi	r25, 0x61	; 97
 442:	21 50       	subi	r18, 0x01	; 1
 444:	80 40       	sbci	r24, 0x00	; 0
 446:	90 40       	sbci	r25, 0x00	; 0
 448:	e1 f7       	brne	.-8      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 44a:	00 c0       	rjmp	.+0      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 44c:	00 00       	nop
		_delay_ms(2000);
		
		moverDerecha(364);
 44e:	8c e6       	ldi	r24, 0x6C	; 108
 450:	91 e0       	ldi	r25, 0x01	; 1
 452:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		moverArriba(1636);
 456:	84 e6       	ldi	r24, 0x64	; 100
 458:	96 e0       	ldi	r25, 0x06	; 6
 45a:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		moverAbajoDerecha(25);
 45e:	89 e1       	ldi	r24, 0x19	; 25
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <moverAbajoDerecha>

		moverAbajo(3182);
 466:	8e e6       	ldi	r24, 0x6E	; 110
 468:	9c e0       	ldi	r25, 0x0C	; 12
 46a:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		moverAbajoIzquierda(20);
 46e:	84 e1       	ldi	r24, 0x14	; 20
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	0e 94 42 04 	call	0x884	; 0x884 <moverAbajoIzquierda>
		moverIzquierda(1364);
 476:	84 e5       	ldi	r24, 0x54	; 84
 478:	95 e0       	ldi	r25, 0x05	; 5
 47a:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		moverArribaIzquierda(20);
 47e:	84 e1       	ldi	r24, 0x14	; 20
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <moverArribaIzquierda>
		moverArriba(3182);
 486:	8e e6       	ldi	r24, 0x6E	; 110
 488:	9c e0       	ldi	r25, 0x0C	; 12
 48a:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>

		moverArribaDerecha(25);
 48e:	89 e1       	ldi	r24, 0x19	; 25
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 1a 04 	call	0x834	; 0x834 <moverArribaDerecha>
		moverAbajo(1636);
 496:	84 e6       	ldi	r24, 0x64	; 100
 498:	96 e0       	ldi	r25, 0x06	; 6
 49a:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		moverDerecha(364);
 49e:	8c e6       	ldi	r24, 0x6C	; 108
 4a0:	91 e0       	ldi	r25, 0x01	; 1
 4a2:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
 4a6:	2f ef       	ldi	r18, 0xFF	; 255
 4a8:	87 ea       	ldi	r24, 0xA7	; 167
 4aa:	91 e6       	ldi	r25, 0x61	; 97
 4ac:	21 50       	subi	r18, 0x01	; 1
 4ae:	80 40       	sbci	r24, 0x00	; 0
 4b0:	90 40       	sbci	r25, 0x00	; 0
 4b2:	e1 f7       	brne	.-8      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4b6:	00 00       	nop
		
		
		// ojo izq
		_delay_ms(2000);
		desactivarSolenoide();
 4b8:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 4bc:	2f ef       	ldi	r18, 0xFF	; 255
 4be:	87 ea       	ldi	r24, 0xA7	; 167
 4c0:	91 e6       	ldi	r25, 0x61	; 97
 4c2:	21 50       	subi	r18, 0x01	; 1
 4c4:	80 40       	sbci	r24, 0x00	; 0
 4c6:	90 40       	sbci	r25, 0x00	; 0
 4c8:	e1 f7       	brne	.-8      	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
 4ca:	00 c0       	rjmp	.+0      	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 4cc:	00 00       	nop
		_delay_ms(2000);
		
		moverAbajo(909);
 4ce:	8d e8       	ldi	r24, 0x8D	; 141
 4d0:	93 e0       	ldi	r25, 0x03	; 3
 4d2:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		moverIzquierda(818);
 4d6:	82 e3       	ldi	r24, 0x32	; 50
 4d8:	93 e0       	ldi	r25, 0x03	; 3
 4da:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		
		activarSolenoide();
 4de:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 4e2:	2f ef       	ldi	r18, 0xFF	; 255
 4e4:	87 ea       	ldi	r24, 0xA7	; 167
 4e6:	91 e6       	ldi	r25, 0x61	; 97
 4e8:	21 50       	subi	r18, 0x01	; 1
 4ea:	80 40       	sbci	r24, 0x00	; 0
 4ec:	90 40       	sbci	r25, 0x00	; 0
 4ee:	e1 f7       	brne	.-8      	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
 4f0:	00 c0       	rjmp	.+0      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4f2:	00 00       	nop
		_delay_ms(2000);
		
		moverAbajo(455);
 4f4:	87 ec       	ldi	r24, 0xC7	; 199
 4f6:	91 e0       	ldi	r25, 0x01	; 1
 4f8:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		moverIzquierda(273);
 4fc:	81 e1       	ldi	r24, 0x11	; 17
 4fe:	91 e0       	ldi	r25, 0x01	; 1
 500:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		moverArriba(455);
 504:	87 ec       	ldi	r24, 0xC7	; 199
 506:	91 e0       	ldi	r25, 0x01	; 1
 508:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		moverDerecha(273);
 50c:	81 e1       	ldi	r24, 0x11	; 17
 50e:	91 e0       	ldi	r25, 0x01	; 1
 510:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
 514:	2f ef       	ldi	r18, 0xFF	; 255
 516:	87 ea       	ldi	r24, 0xA7	; 167
 518:	91 e6       	ldi	r25, 0x61	; 97
 51a:	21 50       	subi	r18, 0x01	; 1
 51c:	80 40       	sbci	r24, 0x00	; 0
 51e:	90 40       	sbci	r25, 0x00	; 0
 520:	e1 f7       	brne	.-8      	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
 522:	00 c0       	rjmp	.+0      	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 524:	00 00       	nop
		
		
		
		// ojo der
		_delay_ms(2000);
		desactivarSolenoide();
 526:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 52a:	2f ef       	ldi	r18, 0xFF	; 255
 52c:	87 ea       	ldi	r24, 0xA7	; 167
 52e:	91 e6       	ldi	r25, 0x61	; 97
 530:	21 50       	subi	r18, 0x01	; 1
 532:	80 40       	sbci	r24, 0x00	; 0
 534:	90 40       	sbci	r25, 0x00	; 0
 536:	e1 f7       	brne	.-8      	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
 538:	00 c0       	rjmp	.+0      	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
 53a:	00 00       	nop
		_delay_ms(2000);
		
		moverDerecha(1636);
 53c:	84 e6       	ldi	r24, 0x64	; 100
 53e:	96 e0       	ldi	r25, 0x06	; 6
 540:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		
		activarSolenoide();
 544:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 548:	2f ef       	ldi	r18, 0xFF	; 255
 54a:	87 ea       	ldi	r24, 0xA7	; 167
 54c:	91 e6       	ldi	r25, 0x61	; 97
 54e:	21 50       	subi	r18, 0x01	; 1
 550:	80 40       	sbci	r24, 0x00	; 0
 552:	90 40       	sbci	r25, 0x00	; 0
 554:	e1 f7       	brne	.-8      	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
 556:	00 c0       	rjmp	.+0      	; 0x558 <__EEPROM_REGION_LENGTH__+0x158>
 558:	00 00       	nop
		_delay_ms(2000);
		
		moverAbajo(455);
 55a:	87 ec       	ldi	r24, 0xC7	; 199
 55c:	91 e0       	ldi	r25, 0x01	; 1
 55e:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		moverDerecha(273);
 562:	81 e1       	ldi	r24, 0x11	; 17
 564:	91 e0       	ldi	r25, 0x01	; 1
 566:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		moverArriba(455);
 56a:	87 ec       	ldi	r24, 0xC7	; 199
 56c:	91 e0       	ldi	r25, 0x01	; 1
 56e:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		moverIzquierda(273);
 572:	81 e1       	ldi	r24, 0x11	; 17
 574:	91 e0       	ldi	r25, 0x01	; 1
 576:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
 57a:	2f ef       	ldi	r18, 0xFF	; 255
 57c:	87 ea       	ldi	r24, 0xA7	; 167
 57e:	91 e6       	ldi	r25, 0x61	; 97
 580:	21 50       	subi	r18, 0x01	; 1
 582:	80 40       	sbci	r24, 0x00	; 0
 584:	90 40       	sbci	r25, 0x00	; 0
 586:	e1 f7       	brne	.-8      	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 588:	00 c0       	rjmp	.+0      	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 58a:	00 00       	nop
		
		// nariz
		_delay_ms(2000);
		desactivarSolenoide();
 58c:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 590:	2f ef       	ldi	r18, 0xFF	; 255
 592:	87 ea       	ldi	r24, 0xA7	; 167
 594:	91 e6       	ldi	r25, 0x61	; 97
 596:	21 50       	subi	r18, 0x01	; 1
 598:	80 40       	sbci	r24, 0x00	; 0
 59a:	90 40       	sbci	r25, 0x00	; 0
 59c:	e1 f7       	brne	.-8      	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
 59e:	00 c0       	rjmp	.+0      	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
 5a0:	00 00       	nop
		_delay_ms(2000);
		
		moverIzquierda(818);
 5a2:	82 e3       	ldi	r24, 0x32	; 50
 5a4:	93 e0       	ldi	r25, 0x03	; 3
 5a6:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		moverAbajo(1364);
 5aa:	84 e5       	ldi	r24, 0x54	; 84
 5ac:	95 e0       	ldi	r25, 0x05	; 5
 5ae:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		
		activarSolenoide();
 5b2:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 5b6:	2f ef       	ldi	r18, 0xFF	; 255
 5b8:	87 ea       	ldi	r24, 0xA7	; 167
 5ba:	91 e6       	ldi	r25, 0x61	; 97
 5bc:	21 50       	subi	r18, 0x01	; 1
 5be:	80 40       	sbci	r24, 0x00	; 0
 5c0:	90 40       	sbci	r25, 0x00	; 0
 5c2:	e1 f7       	brne	.-8      	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 5c4:	00 c0       	rjmp	.+0      	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
 5c6:	00 00       	nop
		_delay_ms(2000);
		
		moverDerecha(455);
 5c8:	87 ec       	ldi	r24, 0xC7	; 199
 5ca:	91 e0       	ldi	r25, 0x01	; 1
 5cc:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		moverAbajo(273);
 5d0:	81 e1       	ldi	r24, 0x11	; 17
 5d2:	91 e0       	ldi	r25, 0x01	; 1
 5d4:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		moverIzquierda(909);
 5d8:	8d e8       	ldi	r24, 0x8D	; 141
 5da:	93 e0       	ldi	r25, 0x03	; 3
 5dc:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		moverArriba(273);
 5e0:	81 e1       	ldi	r24, 0x11	; 17
 5e2:	91 e0       	ldi	r25, 0x01	; 1
 5e4:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		moverDerecha(455);
 5e8:	87 ec       	ldi	r24, 0xC7	; 199
 5ea:	91 e0       	ldi	r25, 0x01	; 1
 5ec:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
 5f0:	2f ef       	ldi	r18, 0xFF	; 255
 5f2:	87 ea       	ldi	r24, 0xA7	; 167
 5f4:	91 e6       	ldi	r25, 0x61	; 97
 5f6:	21 50       	subi	r18, 0x01	; 1
 5f8:	80 40       	sbci	r24, 0x00	; 0
 5fa:	90 40       	sbci	r25, 0x00	; 0
 5fc:	e1 f7       	brne	.-8      	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 5fe:	00 c0       	rjmp	.+0      	; 0x600 <__EEPROM_REGION_LENGTH__+0x200>
 600:	00 00       	nop
		
		// boca
		_delay_ms(2000);
		desactivarSolenoide();
 602:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 606:	2f ef       	ldi	r18, 0xFF	; 255
 608:	87 ea       	ldi	r24, 0xA7	; 167
 60a:	91 e6       	ldi	r25, 0x61	; 97
 60c:	21 50       	subi	r18, 0x01	; 1
 60e:	80 40       	sbci	r24, 0x00	; 0
 610:	90 40       	sbci	r25, 0x00	; 0
 612:	e1 f7       	brne	.-8      	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 614:	00 c0       	rjmp	.+0      	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 616:	00 00       	nop
		_delay_ms(2000);
		
		moverAbajo(273);
 618:	81 e1       	ldi	r24, 0x11	; 17
 61a:	91 e0       	ldi	r25, 0x01	; 1
 61c:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		
		activarSolenoide();
 620:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 624:	2f ef       	ldi	r18, 0xFF	; 255
 626:	87 ea       	ldi	r24, 0xA7	; 167
 628:	91 e6       	ldi	r25, 0x61	; 97
 62a:	21 50       	subi	r18, 0x01	; 1
 62c:	80 40       	sbci	r24, 0x00	; 0
 62e:	90 40       	sbci	r25, 0x00	; 0
 630:	e1 f7       	brne	.-8      	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 632:	00 c0       	rjmp	.+0      	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
 634:	00 00       	nop
		_delay_ms(2000);
		
		moverAbajo(455);
 636:	87 ec       	ldi	r24, 0xC7	; 199
 638:	91 e0       	ldi	r25, 0x01	; 1
 63a:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		moverDerecha(636);
 63e:	8c e7       	ldi	r24, 0x7C	; 124
 640:	92 e0       	ldi	r25, 0x02	; 2
 642:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		moverIzquierda(1273);
 646:	89 ef       	ldi	r24, 0xF9	; 249
 648:	94 e0       	ldi	r25, 0x04	; 4
 64a:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		
		
		//lengua
		moverDerecha(455);
 64e:	87 ec       	ldi	r24, 0xC7	; 199
 650:	91 e0       	ldi	r25, 0x01	; 1
 652:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		moverAbajo(636);
 656:	8c e7       	ldi	r24, 0x7C	; 124
 658:	92 e0       	ldi	r25, 0x02	; 2
 65a:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		moverDerecha(364);
 65e:	8c e6       	ldi	r24, 0x6C	; 108
 660:	91 e0       	ldi	r25, 0x01	; 1
 662:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		moverArriba(636);
 666:	8c e7       	ldi	r24, 0x7C	; 124
 668:	92 e0       	ldi	r25, 0x02	; 2
 66a:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		
		desactivarSolenoide();
 66e:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 672:	2f ef       	ldi	r18, 0xFF	; 255
 674:	87 ea       	ldi	r24, 0xA7	; 167
 676:	91 e6       	ldi	r25, 0x61	; 97
 678:	21 50       	subi	r18, 0x01	; 1
 67a:	80 40       	sbci	r24, 0x00	; 0
 67c:	90 40       	sbci	r25, 0x00	; 0
 67e:	e1 f7       	brne	.-8      	; 0x678 <__EEPROM_REGION_LENGTH__+0x278>
 680:	00 c0       	rjmp	.+0      	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
 682:	00 00       	nop
		_delay_ms(2000);
		
		moverArriba(15000);
 684:	88 e9       	ldi	r24, 0x98	; 152
 686:	9a e3       	ldi	r25, 0x3A	; 58
 688:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		moverDerecha(15000);
 68c:	88 e9       	ldi	r24, 0x98	; 152
 68e:	9a e3       	ldi	r25, 0x3A	; 58
 690:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		
		
		break;
 694:	a5 c0       	rjmp	.+330    	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
		
		case '5':
		UART_sendString("\nSeleccionado: Manzana\n");
 696:	66 e7       	ldi	r22, 0x76	; 118
 698:	71 e0       	ldi	r23, 0x01	; 1
 69a:	80 e0       	ldi	r24, 0x00	; 0
 69c:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>

		moverIzquierda(18000);
 6a0:	80 e5       	ldi	r24, 0x50	; 80
 6a2:	96 e4       	ldi	r25, 0x46	; 70
 6a4:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		moverAbajo(7273);
 6a8:	89 e6       	ldi	r24, 0x69	; 105
 6aa:	9c e1       	ldi	r25, 0x1C	; 28
 6ac:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>

		activarSolenoide();
 6b0:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 6b4:	2f ef       	ldi	r18, 0xFF	; 255
 6b6:	87 ea       	ldi	r24, 0xA7	; 167
 6b8:	91 e6       	ldi	r25, 0x61	; 97
 6ba:	21 50       	subi	r18, 0x01	; 1
 6bc:	80 40       	sbci	r24, 0x00	; 0
 6be:	90 40       	sbci	r25, 0x00	; 0
 6c0:	e1 f7       	brne	.-8      	; 0x6ba <__EEPROM_REGION_LENGTH__+0x2ba>
 6c2:	00 c0       	rjmp	.+0      	; 0x6c4 <__EEPROM_REGION_LENGTH__+0x2c4>
 6c4:	00 00       	nop
		_delay_ms(2000);

		moverAbajoDerecha(5);
 6c6:	85 e0       	ldi	r24, 0x05	; 5
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <moverAbajoDerecha>
		moverAbajo(2727);
 6ce:	87 ea       	ldi	r24, 0xA7	; 167
 6d0:	9a e0       	ldi	r25, 0x0A	; 10
 6d2:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>
		moverAbajoIzquierda(20);
 6d6:	84 e1       	ldi	r24, 0x14	; 20
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	0e 94 42 04 	call	0x884	; 0x884 <moverAbajoIzquierda>
		moverIzquierda(1818);
 6de:	8a e1       	ldi	r24, 0x1A	; 26
 6e0:	97 e0       	ldi	r25, 0x07	; 7
 6e2:	0e 94 3c 06 	call	0xc78	; 0xc78 <moverIzquierda>
		moverArribaIzquierda(20);
 6e6:	84 e1       	ldi	r24, 0x14	; 20
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <moverArribaIzquierda>
		moverArriba(2727);
 6ee:	87 ea       	ldi	r24, 0xA7	; 167
 6f0:	9a e0       	ldi	r25, 0x0A	; 10
 6f2:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>


		moverArribaDerecha(5);
 6f6:	85 e0       	ldi	r24, 0x05	; 5
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	0e 94 1a 04 	call	0x834	; 0x834 <moverArribaDerecha>
		moverDerecha(636);
 6fe:	8c e7       	ldi	r24, 0x7C	; 124
 700:	92 e0       	ldi	r25, 0x02	; 2
 702:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		moverAbajoDerecha(5);
 706:	85 e0       	ldi	r24, 0x05	; 5
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <moverAbajoDerecha>
		moverDerecha(909);
 70e:	8d e8       	ldi	r24, 0x8D	; 141
 710:	93 e0       	ldi	r25, 0x03	; 3
 712:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		moverArriba(1818);
 716:	8a e1       	ldi	r24, 0x1A	; 26
 718:	97 e0       	ldi	r25, 0x07	; 7
 71a:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>

		desactivarSolenoide();
 71e:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 722:	2f ef       	ldi	r18, 0xFF	; 255
 724:	87 ea       	ldi	r24, 0xA7	; 167
 726:	91 e6       	ldi	r25, 0x61	; 97
 728:	21 50       	subi	r18, 0x01	; 1
 72a:	80 40       	sbci	r24, 0x00	; 0
 72c:	90 40       	sbci	r25, 0x00	; 0
 72e:	e1 f7       	brne	.-8      	; 0x728 <__EEPROM_REGION_LENGTH__+0x328>
 730:	00 c0       	rjmp	.+0      	; 0x732 <__EEPROM_REGION_LENGTH__+0x332>
 732:	00 00       	nop
		_delay_ms(2000);

		moverAbajo(909);
 734:	8d e8       	ldi	r24, 0x8D	; 141
 736:	93 e0       	ldi	r25, 0x03	; 3
 738:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>

		activarSolenoide();
 73c:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 740:	2f ef       	ldi	r18, 0xFF	; 255
 742:	87 ea       	ldi	r24, 0xA7	; 167
 744:	91 e6       	ldi	r25, 0x61	; 97
 746:	21 50       	subi	r18, 0x01	; 1
 748:	80 40       	sbci	r24, 0x00	; 0
 74a:	90 40       	sbci	r25, 0x00	; 0
 74c:	e1 f7       	brne	.-8      	; 0x746 <__EEPROM_REGION_LENGTH__+0x346>
 74e:	00 c0       	rjmp	.+0      	; 0x750 <__EEPROM_REGION_LENGTH__+0x350>
 750:	00 00       	nop
		_delay_ms(2000);

		moverArribaDerecha(10);
 752:	8a e0       	ldi	r24, 0x0A	; 10
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	0e 94 1a 04 	call	0x834	; 0x834 <moverArribaDerecha>

		desactivarSolenoide();
 75a:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 75e:	2f ef       	ldi	r18, 0xFF	; 255
 760:	87 ea       	ldi	r24, 0xA7	; 167
 762:	91 e6       	ldi	r25, 0x61	; 97
 764:	21 50       	subi	r18, 0x01	; 1
 766:	80 40       	sbci	r24, 0x00	; 0
 768:	90 40       	sbci	r25, 0x00	; 0
 76a:	e1 f7       	brne	.-8      	; 0x764 <__EEPROM_REGION_LENGTH__+0x364>
 76c:	00 c0       	rjmp	.+0      	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
 76e:	00 00       	nop
		_delay_ms(2000);

		moverAbajoIzquierda(10);
 770:	8a e0       	ldi	r24, 0x0A	; 10
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	0e 94 42 04 	call	0x884	; 0x884 <moverAbajoIzquierda>
		moverAbajo(909);
 778:	8d e8       	ldi	r24, 0x8D	; 141
 77a:	93 e0       	ldi	r25, 0x03	; 3
 77c:	0e 94 4e 06 	call	0xc9c	; 0xc9c <moverAbajo>

		activarSolenoide();
 780:	0e 94 6e 06 	call	0xcdc	; 0xcdc <activarSolenoide>
 784:	2f ef       	ldi	r18, 0xFF	; 255
 786:	87 ea       	ldi	r24, 0xA7	; 167
 788:	91 e6       	ldi	r25, 0x61	; 97
 78a:	21 50       	subi	r18, 0x01	; 1
 78c:	80 40       	sbci	r24, 0x00	; 0
 78e:	90 40       	sbci	r25, 0x00	; 0
 790:	e1 f7       	brne	.-8      	; 0x78a <__EEPROM_REGION_LENGTH__+0x38a>
 792:	00 c0       	rjmp	.+0      	; 0x794 <__EEPROM_REGION_LENGTH__+0x394>
 794:	00 00       	nop
		_delay_ms(2000);

		moverDerecha(909);
 796:	8d e8       	ldi	r24, 0x8D	; 141
 798:	93 e0       	ldi	r25, 0x03	; 3
 79a:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		moverArribaDerecha(5);
 79e:	85 e0       	ldi	r24, 0x05	; 5
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	0e 94 1a 04 	call	0x834	; 0x834 <moverArribaDerecha>
		moverDerecha(636);
 7a6:	8c e7       	ldi	r24, 0x7C	; 124
 7a8:	92 e0       	ldi	r25, 0x02	; 2
 7aa:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>

		desactivarSolenoide();
 7ae:	0e 94 75 06 	call	0xcea	; 0xcea <desactivarSolenoide>
 7b2:	2f ef       	ldi	r18, 0xFF	; 255
 7b4:	87 ea       	ldi	r24, 0xA7	; 167
 7b6:	91 e6       	ldi	r25, 0x61	; 97
 7b8:	21 50       	subi	r18, 0x01	; 1
 7ba:	80 40       	sbci	r24, 0x00	; 0
 7bc:	90 40       	sbci	r25, 0x00	; 0
 7be:	e1 f7       	brne	.-8      	; 0x7b8 <__EEPROM_REGION_LENGTH__+0x3b8>
 7c0:	00 c0       	rjmp	.+0      	; 0x7c2 <__EEPROM_REGION_LENGTH__+0x3c2>
 7c2:	00 00       	nop
		_delay_ms(2000);

		moverArriba(7274);
 7c4:	8a e6       	ldi	r24, 0x6A	; 106
 7c6:	9c e1       	ldi	r25, 0x1C	; 28
 7c8:	0e 94 57 06 	call	0xcae	; 0xcae <moverArriba>
		moverDerecha(18001);
 7cc:	81 e5       	ldi	r24, 0x51	; 81
 7ce:	96 e4       	ldi	r25, 0x46	; 70
 7d0:	0e 94 45 06 	call	0xc8a	; 0xc8a <moverDerecha>
		break;
 7d4:	05 c0       	rjmp	.+10     	; 0x7e0 <__EEPROM_REGION_LENGTH__+0x3e0>
		default:
		UART_sendString("\nOpcion no valida. Intente de nuevo.\n");
 7d6:	6e e8       	ldi	r22, 0x8E	; 142
 7d8:	71 e0       	ldi	r23, 0x01	; 1
 7da:	80 e0       	ldi	r24, 0x00	; 0
 7dc:	0e 94 f6 05 	call	0xbec	; 0xbec <UART_sendString>
		break;
	}
}
 7e0:	cf 91       	pop	r28
 7e2:	08 95       	ret

Disassembly of section .text.main:

00000c4c <main>:
void moverArriba(unsigned int tiempo_ms);
void moverAbajo(unsigned int tiempo_ms);

int main(void){
	
	iniciarPuertos();
 c4c:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <iniciarPuertos>
	UART_init(103);
 c50:	87 e6       	ldi	r24, 0x67	; 103
 c52:	90 e0       	ldi	r25, 0x00	; 0
 c54:	0e 94 1b 06 	call	0xc36	; 0xc36 <UART_init>
	/*moverAbajoIzquierda(30);
	moverArriba(8000);
	moverDerecha(11000);*/
	
	while(1) {
		mostrarMenu();
 c58:	0e 94 d2 05 	call	0xba4	; 0xba4 <mostrarMenu>
		seleccionarFigura();
 c5c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <seleccionarFigura>
 c60:	fb cf       	rjmp	.-10     	; 0xc58 <main+0xc>

Disassembly of section .text.__dummy_fini:

00000d06 <_fini>:
 d06:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000d08 <__funcs_on_exit>:
 d08:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000d0a <__simulator_exit>:
 d0a:	08 95       	ret

Disassembly of section .text.exit:

00000c62 <exit>:
 c62:	ec 01       	movw	r28, r24
 c64:	0e 94 84 06 	call	0xd08	; 0xd08 <__funcs_on_exit>
 c68:	0e 94 83 06 	call	0xd06	; 0xd06 <_fini>
 c6c:	ce 01       	movw	r24, r28
 c6e:	0e 94 85 06 	call	0xd0a	; 0xd0a <__simulator_exit>
 c72:	ce 01       	movw	r24, r28
 c74:	0e 94 81 06 	call	0xd02	; 0xd02 <_Exit>

Disassembly of section .text._Exit:

00000d02 <_Exit>:
 d02:	0e 94 3e 00 	call	0x7c	; 0x7c <_exit>
